#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HeThong
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbtlu")]
	public partial class DatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBuoiHoc(BuoiHoc instance);
    partial void UpdateBuoiHoc(BuoiHoc instance);
    partial void DeleteBuoiHoc(BuoiHoc instance);
    partial void InsertThoiGianTietHoc(ThoiGianTietHoc instance);
    partial void UpdateThoiGianTietHoc(ThoiGianTietHoc instance);
    partial void DeleteThoiGianTietHoc(ThoiGianTietHoc instance);
    partial void InsertDiaDiemHoc(DiaDiemHoc instance);
    partial void UpdateDiaDiemHoc(DiaDiemHoc instance);
    partial void DeleteDiaDiemHoc(DiaDiemHoc instance);
    partial void InsertDiemDanh(DiemDanh instance);
    partial void UpdateDiemDanh(DiemDanh instance);
    partial void DeleteDiemDanh(DiemDanh instance);
    partial void InsertGroupID(GroupID instance);
    partial void UpdateGroupID(GroupID instance);
    partial void DeleteGroupID(GroupID instance);
    partial void InsertKhoa(Khoa instance);
    partial void UpdateKhoa(Khoa instance);
    partial void DeleteKhoa(Khoa instance);
    partial void InsertLopMonHoc(LopMonHoc instance);
    partial void UpdateLopMonHoc(LopMonHoc instance);
    partial void DeleteLopMonHoc(LopMonHoc instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertpqAccessRight(pqAccessRight instance);
    partial void UpdatepqAccessRight(pqAccessRight instance);
    partial void DeletepqAccessRight(pqAccessRight instance);
    partial void InsertpqForm(pqForm instance);
    partial void UpdatepqForm(pqForm instance);
    partial void DeletepqForm(pqForm instance);
    partial void InsertpqModule(pqModule instance);
    partial void UpdatepqModule(pqModule instance);
    partial void DeletepqModule(pqModule instance);
    partial void InsertpqModule_FormControl(pqModule_FormControl instance);
    partial void UpdatepqModule_FormControl(pqModule_FormControl instance);
    partial void DeletepqModule_FormControl(pqModule_FormControl instance);
    partial void InsertpqNhomNhanVien(pqNhomNhanVien instance);
    partial void UpdatepqNhomNhanVien(pqNhomNhanVien instance);
    partial void DeletepqNhomNhanVien(pqNhomNhanVien instance);
    partial void InsertSinhVien(SinhVien instance);
    partial void UpdateSinhVien(SinhVien instance);
    partial void DeleteSinhVien(SinhVien instance);
    partial void InsertSinhVien_LopMonHoc(SinhVien_LopMonHoc instance);
    partial void UpdateSinhVien_LopMonHoc(SinhVien_LopMonHoc instance);
    partial void DeleteSinhVien_LopMonHoc(SinhVien_LopMonHoc instance);
    #endregion
		
		public DatabaseDataContext() : 
				base(global::HeThong.Properties.Settings.Default.linqketnoi, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BuoiHoc> BuoiHocs
		{
			get
			{
				return this.GetTable<BuoiHoc>();
			}
		}
		
		public System.Data.Linq.Table<ThoiGianTietHoc> ThoiGianTietHocs
		{
			get
			{
				return this.GetTable<ThoiGianTietHoc>();
			}
		}
		
		public System.Data.Linq.Table<DiaDiemHoc> DiaDiemHocs
		{
			get
			{
				return this.GetTable<DiaDiemHoc>();
			}
		}
		
		public System.Data.Linq.Table<DiemDanh> DiemDanhs
		{
			get
			{
				return this.GetTable<DiemDanh>();
			}
		}
		
		public System.Data.Linq.Table<GroupID> GroupIDs
		{
			get
			{
				return this.GetTable<GroupID>();
			}
		}
		
		public System.Data.Linq.Table<Khoa> Khoas
		{
			get
			{
				return this.GetTable<Khoa>();
			}
		}
		
		public System.Data.Linq.Table<LopMonHoc> LopMonHocs
		{
			get
			{
				return this.GetTable<LopMonHoc>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<pqAccessRight> pqAccessRights
		{
			get
			{
				return this.GetTable<pqAccessRight>();
			}
		}
		
		public System.Data.Linq.Table<pqForm> pqForms
		{
			get
			{
				return this.GetTable<pqForm>();
			}
		}
		
		public System.Data.Linq.Table<pqModule> pqModules
		{
			get
			{
				return this.GetTable<pqModule>();
			}
		}
		
		public System.Data.Linq.Table<pqModule_FormControl> pqModule_FormControls
		{
			get
			{
				return this.GetTable<pqModule_FormControl>();
			}
		}
		
		public System.Data.Linq.Table<pqNhomNhanVien> pqNhomNhanViens
		{
			get
			{
				return this.GetTable<pqNhomNhanVien>();
			}
		}
		
		public System.Data.Linq.Table<SinhVien> SinhViens
		{
			get
			{
				return this.GetTable<SinhVien>();
			}
		}
		
		public System.Data.Linq.Table<SinhVien_LopMonHoc> SinhVien_LopMonHocs
		{
			get
			{
				return this.GetTable<SinhVien_LopMonHoc>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AccessRightInsert")]
		public int AccessRightInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="GroupID", DbType="Int")] System.Nullable<int> groupID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), groupID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spUpdatePqAccess")]
		public int spUpdatePqAccess([global::System.Data.Linq.Mapping.ParameterAttribute(Name="GroupID", DbType="Int")] System.Nullable<int> groupID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ModuleID", DbType="Int")] System.Nullable<int> moduleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsAccessRight", DbType="Bit")] System.Nullable<bool> isAccessRight)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), groupID, moduleID, isAccessRight);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.pqResetNode")]
		public int pqResetNode([global::System.Data.Linq.Mapping.ParameterAttribute(Name="GroupID", DbType="Int")] System.Nullable<int> groupID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsAccessRight", DbType="Bit")] System.Nullable<bool> isAccessRight)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), groupID, isAccessRight);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BuoiHoc")]
	public partial class BuoiHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenBuoiHoc;
		
		private System.Nullable<int> _IDLopMonHoc;
		
		private System.Nullable<int> _IDTietBatDau;
		
		private System.Nullable<int> _IDTietKetThuc;
		
		private string _GhiChu;
		
		private System.Nullable<int> _IDDiaDiem;
		
		private System.Nullable<System.DateTime> _NgayHoc;
		
		private EntitySet<DiemDanh> _DiemDanhs;
		
		private EntityRef<ThoiGianTietHoc> _ThoiGianTietHoc;
		
		private EntityRef<ThoiGianTietHoc> _ThoiGianTietHoc1;
		
		private EntityRef<DiaDiemHoc> _DiaDiemHoc;
		
		private EntityRef<LopMonHoc> _LopMonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenBuoiHocChanging(string value);
    partial void OnTenBuoiHocChanged();
    partial void OnIDLopMonHocChanging(System.Nullable<int> value);
    partial void OnIDLopMonHocChanged();
    partial void OnIDTietBatDauChanging(System.Nullable<int> value);
    partial void OnIDTietBatDauChanged();
    partial void OnIDTietKetThucChanging(System.Nullable<int> value);
    partial void OnIDTietKetThucChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnIDDiaDiemChanging(System.Nullable<int> value);
    partial void OnIDDiaDiemChanged();
    partial void OnNgayHocChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayHocChanged();
    #endregion
		
		public BuoiHoc()
		{
			this._DiemDanhs = new EntitySet<DiemDanh>(new Action<DiemDanh>(this.attach_DiemDanhs), new Action<DiemDanh>(this.detach_DiemDanhs));
			this._ThoiGianTietHoc = default(EntityRef<ThoiGianTietHoc>);
			this._ThoiGianTietHoc1 = default(EntityRef<ThoiGianTietHoc>);
			this._DiaDiemHoc = default(EntityRef<DiaDiemHoc>);
			this._LopMonHoc = default(EntityRef<LopMonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenBuoiHoc", DbType="NVarChar(50)")]
		public string TenBuoiHoc
		{
			get
			{
				return this._TenBuoiHoc;
			}
			set
			{
				if ((this._TenBuoiHoc != value))
				{
					this.OnTenBuoiHocChanging(value);
					this.SendPropertyChanging();
					this._TenBuoiHoc = value;
					this.SendPropertyChanged("TenBuoiHoc");
					this.OnTenBuoiHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLopMonHoc", DbType="Int")]
		public System.Nullable<int> IDLopMonHoc
		{
			get
			{
				return this._IDLopMonHoc;
			}
			set
			{
				if ((this._IDLopMonHoc != value))
				{
					if (this._LopMonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLopMonHocChanging(value);
					this.SendPropertyChanging();
					this._IDLopMonHoc = value;
					this.SendPropertyChanged("IDLopMonHoc");
					this.OnIDLopMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTietBatDau", DbType="Int")]
		public System.Nullable<int> IDTietBatDau
		{
			get
			{
				return this._IDTietBatDau;
			}
			set
			{
				if ((this._IDTietBatDau != value))
				{
					if (this._ThoiGianTietHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTietBatDauChanging(value);
					this.SendPropertyChanging();
					this._IDTietBatDau = value;
					this.SendPropertyChanged("IDTietBatDau");
					this.OnIDTietBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTietKetThuc", DbType="Int")]
		public System.Nullable<int> IDTietKetThuc
		{
			get
			{
				return this._IDTietKetThuc;
			}
			set
			{
				if ((this._IDTietKetThuc != value))
				{
					if (this._ThoiGianTietHoc1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTietKetThucChanging(value);
					this.SendPropertyChanging();
					this._IDTietKetThuc = value;
					this.SendPropertyChanged("IDTietKetThuc");
					this.OnIDTietKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(1000)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDiaDiem", DbType="Int")]
		public System.Nullable<int> IDDiaDiem
		{
			get
			{
				return this._IDDiaDiem;
			}
			set
			{
				if ((this._IDDiaDiem != value))
				{
					if (this._DiaDiemHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDiaDiemChanging(value);
					this.SendPropertyChanging();
					this._IDDiaDiem = value;
					this.SendPropertyChanged("IDDiaDiem");
					this.OnIDDiaDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayHoc", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayHoc
		{
			get
			{
				return this._NgayHoc;
			}
			set
			{
				if ((this._NgayHoc != value))
				{
					this.OnNgayHocChanging(value);
					this.SendPropertyChanging();
					this._NgayHoc = value;
					this.SendPropertyChanged("NgayHoc");
					this.OnNgayHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BuoiHoc_DiemDanh", Storage="_DiemDanhs", ThisKey="ID", OtherKey="IDBuoiHoc")]
		public EntitySet<DiemDanh> DiemDanhs
		{
			get
			{
				return this._DiemDanhs;
			}
			set
			{
				this._DiemDanhs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThoiGianTietHoc_BuoiHoc", Storage="_ThoiGianTietHoc", ThisKey="IDTietBatDau", OtherKey="ID", IsForeignKey=true)]
		public ThoiGianTietHoc ThoiGianTietHoc
		{
			get
			{
				return this._ThoiGianTietHoc.Entity;
			}
			set
			{
				ThoiGianTietHoc previousValue = this._ThoiGianTietHoc.Entity;
				if (((previousValue != value) 
							|| (this._ThoiGianTietHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThoiGianTietHoc.Entity = null;
						previousValue.BuoiHocs.Remove(this);
					}
					this._ThoiGianTietHoc.Entity = value;
					if ((value != null))
					{
						value.BuoiHocs.Add(this);
						this._IDTietBatDau = value.ID;
					}
					else
					{
						this._IDTietBatDau = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThoiGianTietHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThoiGianTietHoc_BuoiHoc1", Storage="_ThoiGianTietHoc1", ThisKey="IDTietKetThuc", OtherKey="ID", IsForeignKey=true)]
		public ThoiGianTietHoc ThoiGianTietHoc1
		{
			get
			{
				return this._ThoiGianTietHoc1.Entity;
			}
			set
			{
				ThoiGianTietHoc previousValue = this._ThoiGianTietHoc1.Entity;
				if (((previousValue != value) 
							|| (this._ThoiGianTietHoc1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThoiGianTietHoc1.Entity = null;
						previousValue.BuoiHocs1.Remove(this);
					}
					this._ThoiGianTietHoc1.Entity = value;
					if ((value != null))
					{
						value.BuoiHocs1.Add(this);
						this._IDTietKetThuc = value.ID;
					}
					else
					{
						this._IDTietKetThuc = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThoiGianTietHoc1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DiaDiemHoc_BuoiHoc", Storage="_DiaDiemHoc", ThisKey="IDDiaDiem", OtherKey="ID", IsForeignKey=true)]
		public DiaDiemHoc DiaDiemHoc
		{
			get
			{
				return this._DiaDiemHoc.Entity;
			}
			set
			{
				DiaDiemHoc previousValue = this._DiaDiemHoc.Entity;
				if (((previousValue != value) 
							|| (this._DiaDiemHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DiaDiemHoc.Entity = null;
						previousValue.BuoiHocs.Remove(this);
					}
					this._DiaDiemHoc.Entity = value;
					if ((value != null))
					{
						value.BuoiHocs.Add(this);
						this._IDDiaDiem = value.ID;
					}
					else
					{
						this._IDDiaDiem = default(Nullable<int>);
					}
					this.SendPropertyChanged("DiaDiemHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopMonHoc_BuoiHoc", Storage="_LopMonHoc", ThisKey="IDLopMonHoc", OtherKey="ID", IsForeignKey=true)]
		public LopMonHoc LopMonHoc
		{
			get
			{
				return this._LopMonHoc.Entity;
			}
			set
			{
				LopMonHoc previousValue = this._LopMonHoc.Entity;
				if (((previousValue != value) 
							|| (this._LopMonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LopMonHoc.Entity = null;
						previousValue.BuoiHocs.Remove(this);
					}
					this._LopMonHoc.Entity = value;
					if ((value != null))
					{
						value.BuoiHocs.Add(this);
						this._IDLopMonHoc = value.ID;
					}
					else
					{
						this._IDLopMonHoc = default(Nullable<int>);
					}
					this.SendPropertyChanged("LopMonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DiemDanhs(DiemDanh entity)
		{
			this.SendPropertyChanging();
			entity.BuoiHoc = this;
		}
		
		private void detach_DiemDanhs(DiemDanh entity)
		{
			this.SendPropertyChanging();
			entity.BuoiHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThoiGianTietHoc")]
	public partial class ThoiGianTietHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _TenTiet;
		
		private System.Nullable<System.DateTime> _ThoiGianBatDau;
		
		private System.Nullable<System.DateTime> _ThoiGianKetThuc;
		
		private EntitySet<BuoiHoc> _BuoiHocs;
		
		private EntitySet<BuoiHoc> _BuoiHocs1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenTietChanging(System.Nullable<int> value);
    partial void OnTenTietChanged();
    partial void OnThoiGianBatDauChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianBatDauChanged();
    partial void OnThoiGianKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianKetThucChanged();
    #endregion
		
		public ThoiGianTietHoc()
		{
			this._BuoiHocs = new EntitySet<BuoiHoc>(new Action<BuoiHoc>(this.attach_BuoiHocs), new Action<BuoiHoc>(this.detach_BuoiHocs));
			this._BuoiHocs1 = new EntitySet<BuoiHoc>(new Action<BuoiHoc>(this.attach_BuoiHocs1), new Action<BuoiHoc>(this.detach_BuoiHocs1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTiet", DbType="Int")]
		public System.Nullable<int> TenTiet
		{
			get
			{
				return this._TenTiet;
			}
			set
			{
				if ((this._TenTiet != value))
				{
					this.OnTenTietChanging(value);
					this.SendPropertyChanging();
					this._TenTiet = value;
					this.SendPropertyChanged("TenTiet");
					this.OnTenTietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianBatDau", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianBatDau
		{
			get
			{
				return this._ThoiGianBatDau;
			}
			set
			{
				if ((this._ThoiGianBatDau != value))
				{
					this.OnThoiGianBatDauChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBatDau = value;
					this.SendPropertyChanged("ThoiGianBatDau");
					this.OnThoiGianBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianKetThuc", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianKetThuc
		{
			get
			{
				return this._ThoiGianKetThuc;
			}
			set
			{
				if ((this._ThoiGianKetThuc != value))
				{
					this.OnThoiGianKetThucChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianKetThuc = value;
					this.SendPropertyChanged("ThoiGianKetThuc");
					this.OnThoiGianKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThoiGianTietHoc_BuoiHoc", Storage="_BuoiHocs", ThisKey="ID", OtherKey="IDTietBatDau")]
		public EntitySet<BuoiHoc> BuoiHocs
		{
			get
			{
				return this._BuoiHocs;
			}
			set
			{
				this._BuoiHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThoiGianTietHoc_BuoiHoc1", Storage="_BuoiHocs1", ThisKey="ID", OtherKey="IDTietKetThuc")]
		public EntitySet<BuoiHoc> BuoiHocs1
		{
			get
			{
				return this._BuoiHocs1;
			}
			set
			{
				this._BuoiHocs1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BuoiHocs(BuoiHoc entity)
		{
			this.SendPropertyChanging();
			entity.ThoiGianTietHoc = this;
		}
		
		private void detach_BuoiHocs(BuoiHoc entity)
		{
			this.SendPropertyChanging();
			entity.ThoiGianTietHoc = null;
		}
		
		private void attach_BuoiHocs1(BuoiHoc entity)
		{
			this.SendPropertyChanging();
			entity.ThoiGianTietHoc1 = this;
		}
		
		private void detach_BuoiHocs1(BuoiHoc entity)
		{
			this.SendPropertyChanging();
			entity.ThoiGianTietHoc1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DiaDiemHoc")]
	public partial class DiaDiemHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenDiaDiem;
		
		private string _KhuNha;
		
		private string _GhiChu;
		
		private EntitySet<BuoiHoc> _BuoiHocs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenDiaDiemChanging(string value);
    partial void OnTenDiaDiemChanged();
    partial void OnKhuNhaChanging(string value);
    partial void OnKhuNhaChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public DiaDiemHoc()
		{
			this._BuoiHocs = new EntitySet<BuoiHoc>(new Action<BuoiHoc>(this.attach_BuoiHocs), new Action<BuoiHoc>(this.detach_BuoiHocs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDiaDiem", DbType="NVarChar(50)")]
		public string TenDiaDiem
		{
			get
			{
				return this._TenDiaDiem;
			}
			set
			{
				if ((this._TenDiaDiem != value))
				{
					this.OnTenDiaDiemChanging(value);
					this.SendPropertyChanging();
					this._TenDiaDiem = value;
					this.SendPropertyChanged("TenDiaDiem");
					this.OnTenDiaDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhuNha", DbType="NVarChar(100)")]
		public string KhuNha
		{
			get
			{
				return this._KhuNha;
			}
			set
			{
				if ((this._KhuNha != value))
				{
					this.OnKhuNhaChanging(value);
					this.SendPropertyChanging();
					this._KhuNha = value;
					this.SendPropertyChanged("KhuNha");
					this.OnKhuNhaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(500)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DiaDiemHoc_BuoiHoc", Storage="_BuoiHocs", ThisKey="ID", OtherKey="IDDiaDiem")]
		public EntitySet<BuoiHoc> BuoiHocs
		{
			get
			{
				return this._BuoiHocs;
			}
			set
			{
				this._BuoiHocs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BuoiHocs(BuoiHoc entity)
		{
			this.SendPropertyChanging();
			entity.DiaDiemHoc = this;
		}
		
		private void detach_BuoiHocs(BuoiHoc entity)
		{
			this.SendPropertyChanging();
			entity.DiaDiemHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DiemDanh")]
	public partial class DiemDanh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _IDSinhVien;
		
		private System.Nullable<int> _IDBuoiHoc;
		
		private System.Nullable<bool> _DenLop;
		
		private System.Nullable<System.DateTime> _TGDiemDanh;
		
		private EntityRef<BuoiHoc> _BuoiHoc;
		
		private EntityRef<SinhVien> _SinhVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDSinhVienChanging(System.Nullable<int> value);
    partial void OnIDSinhVienChanged();
    partial void OnIDBuoiHocChanging(System.Nullable<int> value);
    partial void OnIDBuoiHocChanged();
    partial void OnDenLopChanging(System.Nullable<bool> value);
    partial void OnDenLopChanged();
    partial void OnTGDiemDanhChanging(System.Nullable<System.DateTime> value);
    partial void OnTGDiemDanhChanged();
    #endregion
		
		public DiemDanh()
		{
			this._BuoiHoc = default(EntityRef<BuoiHoc>);
			this._SinhVien = default(EntityRef<SinhVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSinhVien", DbType="Int")]
		public System.Nullable<int> IDSinhVien
		{
			get
			{
				return this._IDSinhVien;
			}
			set
			{
				if ((this._IDSinhVien != value))
				{
					if (this._SinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSinhVienChanging(value);
					this.SendPropertyChanging();
					this._IDSinhVien = value;
					this.SendPropertyChanged("IDSinhVien");
					this.OnIDSinhVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBuoiHoc", DbType="Int")]
		public System.Nullable<int> IDBuoiHoc
		{
			get
			{
				return this._IDBuoiHoc;
			}
			set
			{
				if ((this._IDBuoiHoc != value))
				{
					if (this._BuoiHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDBuoiHocChanging(value);
					this.SendPropertyChanging();
					this._IDBuoiHoc = value;
					this.SendPropertyChanged("IDBuoiHoc");
					this.OnIDBuoiHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DenLop", DbType="Bit")]
		public System.Nullable<bool> DenLop
		{
			get
			{
				return this._DenLop;
			}
			set
			{
				if ((this._DenLop != value))
				{
					this.OnDenLopChanging(value);
					this.SendPropertyChanging();
					this._DenLop = value;
					this.SendPropertyChanged("DenLop");
					this.OnDenLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TGDiemDanh", DbType="DateTime")]
		public System.Nullable<System.DateTime> TGDiemDanh
		{
			get
			{
				return this._TGDiemDanh;
			}
			set
			{
				if ((this._TGDiemDanh != value))
				{
					this.OnTGDiemDanhChanging(value);
					this.SendPropertyChanging();
					this._TGDiemDanh = value;
					this.SendPropertyChanged("TGDiemDanh");
					this.OnTGDiemDanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BuoiHoc_DiemDanh", Storage="_BuoiHoc", ThisKey="IDBuoiHoc", OtherKey="ID", IsForeignKey=true)]
		public BuoiHoc BuoiHoc
		{
			get
			{
				return this._BuoiHoc.Entity;
			}
			set
			{
				BuoiHoc previousValue = this._BuoiHoc.Entity;
				if (((previousValue != value) 
							|| (this._BuoiHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BuoiHoc.Entity = null;
						previousValue.DiemDanhs.Remove(this);
					}
					this._BuoiHoc.Entity = value;
					if ((value != null))
					{
						value.DiemDanhs.Add(this);
						this._IDBuoiHoc = value.ID;
					}
					else
					{
						this._IDBuoiHoc = default(Nullable<int>);
					}
					this.SendPropertyChanged("BuoiHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_DiemDanh", Storage="_SinhVien", ThisKey="IDSinhVien", OtherKey="ID", IsForeignKey=true)]
		public SinhVien SinhVien
		{
			get
			{
				return this._SinhVien.Entity;
			}
			set
			{
				SinhVien previousValue = this._SinhVien.Entity;
				if (((previousValue != value) 
							|| (this._SinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinhVien.Entity = null;
						previousValue.DiemDanhs.Remove(this);
					}
					this._SinhVien.Entity = value;
					if ((value != null))
					{
						value.DiemDanhs.Add(this);
						this._IDSinhVien = value.ID;
					}
					else
					{
						this._IDSinhVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("SinhVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupID")]
	public partial class GroupID : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _GroupName;
		
		private string _DienGiai;
		
		private EntitySet<pqAccessRight> _pqAccessRights;
		
		private EntitySet<pqNhomNhanVien> _pqNhomNhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnDienGiaiChanging(string value);
    partial void OnDienGiaiChanged();
    #endregion
		
		public GroupID()
		{
			this._pqAccessRights = new EntitySet<pqAccessRight>(new Action<pqAccessRight>(this.attach_pqAccessRights), new Action<pqAccessRight>(this.detach_pqAccessRights));
			this._pqNhomNhanViens = new EntitySet<pqNhomNhanVien>(new Action<pqNhomNhanVien>(this.attach_pqNhomNhanViens), new Action<pqNhomNhanVien>(this.detach_pqNhomNhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(100)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienGiai", DbType="NVarChar(200)")]
		public string DienGiai
		{
			get
			{
				return this._DienGiai;
			}
			set
			{
				if ((this._DienGiai != value))
				{
					this.OnDienGiaiChanging(value);
					this.SendPropertyChanging();
					this._DienGiai = value;
					this.SendPropertyChanged("DienGiai");
					this.OnDienGiaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupID_pqAccessRight", Storage="_pqAccessRights", ThisKey="ID", OtherKey="GroupID")]
		public EntitySet<pqAccessRight> pqAccessRights
		{
			get
			{
				return this._pqAccessRights;
			}
			set
			{
				this._pqAccessRights.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupID_pqNhomNhanVien", Storage="_pqNhomNhanViens", ThisKey="ID", OtherKey="GroupID")]
		public EntitySet<pqNhomNhanVien> pqNhomNhanViens
		{
			get
			{
				return this._pqNhomNhanViens;
			}
			set
			{
				this._pqNhomNhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pqAccessRights(pqAccessRight entity)
		{
			this.SendPropertyChanging();
			entity.GroupID1 = this;
		}
		
		private void detach_pqAccessRights(pqAccessRight entity)
		{
			this.SendPropertyChanging();
			entity.GroupID1 = null;
		}
		
		private void attach_pqNhomNhanViens(pqNhomNhanVien entity)
		{
			this.SendPropertyChanging();
			entity.GroupID1 = this;
		}
		
		private void detach_pqNhomNhanViens(pqNhomNhanVien entity)
		{
			this.SendPropertyChanging();
			entity.GroupID1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Khoa")]
	public partial class Khoa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenKhoa;
		
		private string _SDT;
		
		private string _DiaChi;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenKhoaChanging(string value);
    partial void OnTenKhoaChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    #endregion
		
		public Khoa()
		{
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhoa", DbType="NVarChar(200)")]
		public string TenKhoa
		{
			get
			{
				return this._TenKhoa;
			}
			set
			{
				if ((this._TenKhoa != value))
				{
					this.OnTenKhoaChanging(value);
					this.SendPropertyChanging();
					this._TenKhoa = value;
					this.SendPropertyChanged("TenKhoa");
					this.OnTenKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(20)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(1000)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_NhanVien", Storage="_NhanViens", ThisKey="ID", OtherKey="IDKhoa")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.Khoa = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.Khoa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LopMonHoc")]
	public partial class LopMonHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MaLopMonHoc;
		
		private string _TenLopMonHoc;
		
		private System.Nullable<int> _SoTinChi;
		
		private System.Nullable<int> _IDGiangVien;
		
		private string _GhiChu;
		
		private System.Nullable<int> _TongSoTiet;
		
		private System.Nullable<bool> _IsKT;
		
		private EntitySet<BuoiHoc> _BuoiHocs;
		
		private EntitySet<SinhVien_LopMonHoc> _SinhVien_LopMonHocs;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaLopMonHocChanging(string value);
    partial void OnMaLopMonHocChanged();
    partial void OnTenLopMonHocChanging(string value);
    partial void OnTenLopMonHocChanged();
    partial void OnSoTinChiChanging(System.Nullable<int> value);
    partial void OnSoTinChiChanged();
    partial void OnIDGiangVienChanging(System.Nullable<int> value);
    partial void OnIDGiangVienChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnTongSoTietChanging(System.Nullable<int> value);
    partial void OnTongSoTietChanged();
    partial void OnIsKTChanging(System.Nullable<bool> value);
    partial void OnIsKTChanged();
    #endregion
		
		public LopMonHoc()
		{
			this._BuoiHocs = new EntitySet<BuoiHoc>(new Action<BuoiHoc>(this.attach_BuoiHocs), new Action<BuoiHoc>(this.detach_BuoiHocs));
			this._SinhVien_LopMonHocs = new EntitySet<SinhVien_LopMonHoc>(new Action<SinhVien_LopMonHoc>(this.attach_SinhVien_LopMonHocs), new Action<SinhVien_LopMonHoc>(this.detach_SinhVien_LopMonHocs));
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLopMonHoc", DbType="NVarChar(100)")]
		public string MaLopMonHoc
		{
			get
			{
				return this._MaLopMonHoc;
			}
			set
			{
				if ((this._MaLopMonHoc != value))
				{
					this.OnMaLopMonHocChanging(value);
					this.SendPropertyChanging();
					this._MaLopMonHoc = value;
					this.SendPropertyChanged("MaLopMonHoc");
					this.OnMaLopMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLopMonHoc", DbType="NVarChar(200)")]
		public string TenLopMonHoc
		{
			get
			{
				return this._TenLopMonHoc;
			}
			set
			{
				if ((this._TenLopMonHoc != value))
				{
					this.OnTenLopMonHocChanging(value);
					this.SendPropertyChanging();
					this._TenLopMonHoc = value;
					this.SendPropertyChanged("TenLopMonHoc");
					this.OnTenLopMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTinChi", DbType="Int")]
		public System.Nullable<int> SoTinChi
		{
			get
			{
				return this._SoTinChi;
			}
			set
			{
				if ((this._SoTinChi != value))
				{
					this.OnSoTinChiChanging(value);
					this.SendPropertyChanging();
					this._SoTinChi = value;
					this.SendPropertyChanged("SoTinChi");
					this.OnSoTinChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGiangVien", DbType="Int")]
		public System.Nullable<int> IDGiangVien
		{
			get
			{
				return this._IDGiangVien;
			}
			set
			{
				if ((this._IDGiangVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDGiangVienChanging(value);
					this.SendPropertyChanging();
					this._IDGiangVien = value;
					this.SendPropertyChanged("IDGiangVien");
					this.OnIDGiangVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(1000)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongSoTiet", DbType="Int")]
		public System.Nullable<int> TongSoTiet
		{
			get
			{
				return this._TongSoTiet;
			}
			set
			{
				if ((this._TongSoTiet != value))
				{
					this.OnTongSoTietChanging(value);
					this.SendPropertyChanging();
					this._TongSoTiet = value;
					this.SendPropertyChanged("TongSoTiet");
					this.OnTongSoTietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsKT", DbType="Bit")]
		public System.Nullable<bool> IsKT
		{
			get
			{
				return this._IsKT;
			}
			set
			{
				if ((this._IsKT != value))
				{
					this.OnIsKTChanging(value);
					this.SendPropertyChanging();
					this._IsKT = value;
					this.SendPropertyChanged("IsKT");
					this.OnIsKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopMonHoc_BuoiHoc", Storage="_BuoiHocs", ThisKey="ID", OtherKey="IDLopMonHoc")]
		public EntitySet<BuoiHoc> BuoiHocs
		{
			get
			{
				return this._BuoiHocs;
			}
			set
			{
				this._BuoiHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopMonHoc_SinhVien_LopMonHoc", Storage="_SinhVien_LopMonHocs", ThisKey="ID", OtherKey="IDLopMonHoc")]
		public EntitySet<SinhVien_LopMonHoc> SinhVien_LopMonHocs
		{
			get
			{
				return this._SinhVien_LopMonHocs;
			}
			set
			{
				this._SinhVien_LopMonHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_LopMonHoc", Storage="_NhanVien", ThisKey="IDGiangVien", OtherKey="ID", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.LopMonHocs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.LopMonHocs.Add(this);
						this._IDGiangVien = value.ID;
					}
					else
					{
						this._IDGiangVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BuoiHocs(BuoiHoc entity)
		{
			this.SendPropertyChanging();
			entity.LopMonHoc = this;
		}
		
		private void detach_BuoiHocs(BuoiHoc entity)
		{
			this.SendPropertyChanging();
			entity.LopMonHoc = null;
		}
		
		private void attach_SinhVien_LopMonHocs(SinhVien_LopMonHoc entity)
		{
			this.SendPropertyChanging();
			entity.LopMonHoc = this;
		}
		
		private void detach_SinhVien_LopMonHocs(SinhVien_LopMonHoc entity)
		{
			this.SendPropertyChanging();
			entity.LopMonHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MaNV;
		
		private string _TenNV;
		
		private System.Nullable<bool> _GioiTinh;
		
		private System.Nullable<int> _Tuoi;
		
		private string _SDT;
		
		private System.Nullable<int> _IDKhoa;
		
		private System.Nullable<bool> _IsGV;
		
		private string _DiaChi;
		
		private string _Password;
		
		private System.Nullable<bool> _IsLock;
		
		private EntitySet<LopMonHoc> _LopMonHocs;
		
		private EntitySet<pqNhomNhanVien> _pqNhomNhanViens;
		
		private EntityRef<Khoa> _Khoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnTenNVChanging(string value);
    partial void OnTenNVChanged();
    partial void OnGioiTinhChanging(System.Nullable<bool> value);
    partial void OnGioiTinhChanged();
    partial void OnTuoiChanging(System.Nullable<int> value);
    partial void OnTuoiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnIDKhoaChanging(System.Nullable<int> value);
    partial void OnIDKhoaChanged();
    partial void OnIsGVChanging(System.Nullable<bool> value);
    partial void OnIsGVChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIsLockChanging(System.Nullable<bool> value);
    partial void OnIsLockChanged();
    #endregion
		
		public NhanVien()
		{
			this._LopMonHocs = new EntitySet<LopMonHoc>(new Action<LopMonHoc>(this.attach_LopMonHocs), new Action<LopMonHoc>(this.detach_LopMonHocs));
			this._pqNhomNhanViens = new EntitySet<pqNhomNhanVien>(new Action<pqNhomNhanVien>(this.attach_pqNhomNhanViens), new Action<pqNhomNhanVien>(this.detach_pqNhomNhanViens));
			this._Khoa = default(EntityRef<Khoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NVarChar(100)")]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNV", DbType="NVarChar(100)")]
		public string TenNV
		{
			get
			{
				return this._TenNV;
			}
			set
			{
				if ((this._TenNV != value))
				{
					this.OnTenNVChanging(value);
					this.SendPropertyChanging();
					this._TenNV = value;
					this.SendPropertyChanged("TenNV");
					this.OnTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit")]
		public System.Nullable<bool> GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tuoi", DbType="Int")]
		public System.Nullable<int> Tuoi
		{
			get
			{
				return this._Tuoi;
			}
			set
			{
				if ((this._Tuoi != value))
				{
					this.OnTuoiChanging(value);
					this.SendPropertyChanging();
					this._Tuoi = value;
					this.SendPropertyChanged("Tuoi");
					this.OnTuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(30)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKhoa", DbType="Int")]
		public System.Nullable<int> IDKhoa
		{
			get
			{
				return this._IDKhoa;
			}
			set
			{
				if ((this._IDKhoa != value))
				{
					if (this._Khoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKhoaChanging(value);
					this.SendPropertyChanging();
					this._IDKhoa = value;
					this.SendPropertyChanged("IDKhoa");
					this.OnIDKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGV", DbType="Bit")]
		public System.Nullable<bool> IsGV
		{
			get
			{
				return this._IsGV;
			}
			set
			{
				if ((this._IsGV != value))
				{
					this.OnIsGVChanging(value);
					this.SendPropertyChanging();
					this._IsGV = value;
					this.SendPropertyChanged("IsGV");
					this.OnIsGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(500)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(200)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLock", DbType="Bit")]
		public System.Nullable<bool> IsLock
		{
			get
			{
				return this._IsLock;
			}
			set
			{
				if ((this._IsLock != value))
				{
					this.OnIsLockChanging(value);
					this.SendPropertyChanging();
					this._IsLock = value;
					this.SendPropertyChanged("IsLock");
					this.OnIsLockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_LopMonHoc", Storage="_LopMonHocs", ThisKey="ID", OtherKey="IDGiangVien")]
		public EntitySet<LopMonHoc> LopMonHocs
		{
			get
			{
				return this._LopMonHocs;
			}
			set
			{
				this._LopMonHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_pqNhomNhanVien", Storage="_pqNhomNhanViens", ThisKey="ID", OtherKey="MaNV")]
		public EntitySet<pqNhomNhanVien> pqNhomNhanViens
		{
			get
			{
				return this._pqNhomNhanViens;
			}
			set
			{
				this._pqNhomNhanViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_NhanVien", Storage="_Khoa", ThisKey="IDKhoa", OtherKey="ID", IsForeignKey=true)]
		public Khoa Khoa
		{
			get
			{
				return this._Khoa.Entity;
			}
			set
			{
				Khoa previousValue = this._Khoa.Entity;
				if (((previousValue != value) 
							|| (this._Khoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khoa.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._Khoa.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._IDKhoa = value.ID;
					}
					else
					{
						this._IDKhoa = default(Nullable<int>);
					}
					this.SendPropertyChanged("Khoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LopMonHocs(LopMonHoc entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_LopMonHocs(LopMonHoc entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_pqNhomNhanViens(pqNhomNhanVien entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_pqNhomNhanViens(pqNhomNhanVien entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pqAccessRight")]
	public partial class pqAccessRight : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ModuleID;
		
		private System.Nullable<int> _GroupID;
		
		private System.Nullable<bool> _IsAccessRight;
		
		private EntityRef<GroupID> _GroupID1;
		
		private EntityRef<pqModule> _pqModule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnModuleIDChanging(System.Nullable<int> value);
    partial void OnModuleIDChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    partial void OnIsAccessRightChanging(System.Nullable<bool> value);
    partial void OnIsAccessRightChanged();
    #endregion
		
		public pqAccessRight()
		{
			this._GroupID1 = default(EntityRef<GroupID>);
			this._pqModule = default(EntityRef<pqModule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int")]
		public System.Nullable<int> ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					if (this._pqModule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._GroupID1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAccessRight", DbType="Bit")]
		public System.Nullable<bool> IsAccessRight
		{
			get
			{
				return this._IsAccessRight;
			}
			set
			{
				if ((this._IsAccessRight != value))
				{
					this.OnIsAccessRightChanging(value);
					this.SendPropertyChanging();
					this._IsAccessRight = value;
					this.SendPropertyChanged("IsAccessRight");
					this.OnIsAccessRightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupID_pqAccessRight", Storage="_GroupID1", ThisKey="GroupID", OtherKey="ID", IsForeignKey=true)]
		public GroupID GroupID1
		{
			get
			{
				return this._GroupID1.Entity;
			}
			set
			{
				GroupID previousValue = this._GroupID1.Entity;
				if (((previousValue != value) 
							|| (this._GroupID1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GroupID1.Entity = null;
						previousValue.pqAccessRights.Remove(this);
					}
					this._GroupID1.Entity = value;
					if ((value != null))
					{
						value.pqAccessRights.Add(this);
						this._GroupID = value.ID;
					}
					else
					{
						this._GroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("GroupID1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pqModule_pqAccessRight", Storage="_pqModule", ThisKey="ModuleID", OtherKey="ID", IsForeignKey=true)]
		public pqModule pqModule
		{
			get
			{
				return this._pqModule.Entity;
			}
			set
			{
				pqModule previousValue = this._pqModule.Entity;
				if (((previousValue != value) 
							|| (this._pqModule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._pqModule.Entity = null;
						previousValue.pqAccessRights.Remove(this);
					}
					this._pqModule.Entity = value;
					if ((value != null))
					{
						value.pqAccessRights.Add(this);
						this._ModuleID = value.ID;
					}
					else
					{
						this._ModuleID = default(Nullable<int>);
					}
					this.SendPropertyChanged("pqModule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pqForm")]
	public partial class pqForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FormName;
		
		private string _DienGiai;
		
		private EntitySet<pqModule_FormControl> _pqModule_FormControls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFormNameChanging(string value);
    partial void OnFormNameChanged();
    partial void OnDienGiaiChanging(string value);
    partial void OnDienGiaiChanged();
    #endregion
		
		public pqForm()
		{
			this._pqModule_FormControls = new EntitySet<pqModule_FormControl>(new Action<pqModule_FormControl>(this.attach_pqModule_FormControls), new Action<pqModule_FormControl>(this.detach_pqModule_FormControls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormName", DbType="NVarChar(100)")]
		public string FormName
		{
			get
			{
				return this._FormName;
			}
			set
			{
				if ((this._FormName != value))
				{
					this.OnFormNameChanging(value);
					this.SendPropertyChanging();
					this._FormName = value;
					this.SendPropertyChanged("FormName");
					this.OnFormNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienGiai", DbType="NChar(500)")]
		public string DienGiai
		{
			get
			{
				return this._DienGiai;
			}
			set
			{
				if ((this._DienGiai != value))
				{
					this.OnDienGiaiChanging(value);
					this.SendPropertyChanging();
					this._DienGiai = value;
					this.SendPropertyChanged("DienGiai");
					this.OnDienGiaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pqForm_pqModule_FormControl", Storage="_pqModule_FormControls", ThisKey="ID", OtherKey="FormID")]
		public EntitySet<pqModule_FormControl> pqModule_FormControls
		{
			get
			{
				return this._pqModule_FormControls;
			}
			set
			{
				this._pqModule_FormControls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pqModule_FormControls(pqModule_FormControl entity)
		{
			this.SendPropertyChanging();
			entity.pqForm = this;
		}
		
		private void detach_pqModule_FormControls(pqModule_FormControl entity)
		{
			this.SendPropertyChanging();
			entity.pqForm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pqModule")]
	public partial class pqModule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _DienGiai;
		
		private System.Nullable<int> _IDCha;
		
		private EntitySet<pqAccessRight> _pqAccessRights;
		
		private EntitySet<pqModule_FormControl> _pqModule_FormControls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDienGiaiChanging(string value);
    partial void OnDienGiaiChanged();
    partial void OnIDChaChanging(System.Nullable<int> value);
    partial void OnIDChaChanged();
    #endregion
		
		public pqModule()
		{
			this._pqAccessRights = new EntitySet<pqAccessRight>(new Action<pqAccessRight>(this.attach_pqAccessRights), new Action<pqAccessRight>(this.detach_pqAccessRights));
			this._pqModule_FormControls = new EntitySet<pqModule_FormControl>(new Action<pqModule_FormControl>(this.attach_pqModule_FormControls), new Action<pqModule_FormControl>(this.detach_pqModule_FormControls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienGiai", DbType="NVarChar(500)")]
		public string DienGiai
		{
			get
			{
				return this._DienGiai;
			}
			set
			{
				if ((this._DienGiai != value))
				{
					this.OnDienGiaiChanging(value);
					this.SendPropertyChanging();
					this._DienGiai = value;
					this.SendPropertyChanged("DienGiai");
					this.OnDienGiaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCha", DbType="Int")]
		public System.Nullable<int> IDCha
		{
			get
			{
				return this._IDCha;
			}
			set
			{
				if ((this._IDCha != value))
				{
					this.OnIDChaChanging(value);
					this.SendPropertyChanging();
					this._IDCha = value;
					this.SendPropertyChanged("IDCha");
					this.OnIDChaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pqModule_pqAccessRight", Storage="_pqAccessRights", ThisKey="ID", OtherKey="ModuleID")]
		public EntitySet<pqAccessRight> pqAccessRights
		{
			get
			{
				return this._pqAccessRights;
			}
			set
			{
				this._pqAccessRights.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pqModule_pqModule_FormControl", Storage="_pqModule_FormControls", ThisKey="ID", OtherKey="ModuleID")]
		public EntitySet<pqModule_FormControl> pqModule_FormControls
		{
			get
			{
				return this._pqModule_FormControls;
			}
			set
			{
				this._pqModule_FormControls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pqAccessRights(pqAccessRight entity)
		{
			this.SendPropertyChanging();
			entity.pqModule = this;
		}
		
		private void detach_pqAccessRights(pqAccessRight entity)
		{
			this.SendPropertyChanging();
			entity.pqModule = null;
		}
		
		private void attach_pqModule_FormControls(pqModule_FormControl entity)
		{
			this.SendPropertyChanging();
			entity.pqModule = this;
		}
		
		private void detach_pqModule_FormControls(pqModule_FormControl entity)
		{
			this.SendPropertyChanging();
			entity.pqModule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pqModule_FormControl")]
	public partial class pqModule_FormControl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ModuleID;
		
		private System.Nullable<int> _FormID;
		
		private string _ControlName;
		
		private EntityRef<pqForm> _pqForm;
		
		private EntityRef<pqModule> _pqModule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnModuleIDChanging(System.Nullable<int> value);
    partial void OnModuleIDChanged();
    partial void OnFormIDChanging(System.Nullable<int> value);
    partial void OnFormIDChanged();
    partial void OnControlNameChanging(string value);
    partial void OnControlNameChanged();
    #endregion
		
		public pqModule_FormControl()
		{
			this._pqForm = default(EntityRef<pqForm>);
			this._pqModule = default(EntityRef<pqModule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int")]
		public System.Nullable<int> ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					if (this._pqModule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormID", DbType="Int")]
		public System.Nullable<int> FormID
		{
			get
			{
				return this._FormID;
			}
			set
			{
				if ((this._FormID != value))
				{
					if (this._pqForm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFormIDChanging(value);
					this.SendPropertyChanging();
					this._FormID = value;
					this.SendPropertyChanged("FormID");
					this.OnFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlName", DbType="NVarChar(500)")]
		public string ControlName
		{
			get
			{
				return this._ControlName;
			}
			set
			{
				if ((this._ControlName != value))
				{
					this.OnControlNameChanging(value);
					this.SendPropertyChanging();
					this._ControlName = value;
					this.SendPropertyChanged("ControlName");
					this.OnControlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pqForm_pqModule_FormControl", Storage="_pqForm", ThisKey="FormID", OtherKey="ID", IsForeignKey=true)]
		public pqForm pqForm
		{
			get
			{
				return this._pqForm.Entity;
			}
			set
			{
				pqForm previousValue = this._pqForm.Entity;
				if (((previousValue != value) 
							|| (this._pqForm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._pqForm.Entity = null;
						previousValue.pqModule_FormControls.Remove(this);
					}
					this._pqForm.Entity = value;
					if ((value != null))
					{
						value.pqModule_FormControls.Add(this);
						this._FormID = value.ID;
					}
					else
					{
						this._FormID = default(Nullable<int>);
					}
					this.SendPropertyChanged("pqForm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pqModule_pqModule_FormControl", Storage="_pqModule", ThisKey="ModuleID", OtherKey="ID", IsForeignKey=true)]
		public pqModule pqModule
		{
			get
			{
				return this._pqModule.Entity;
			}
			set
			{
				pqModule previousValue = this._pqModule.Entity;
				if (((previousValue != value) 
							|| (this._pqModule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._pqModule.Entity = null;
						previousValue.pqModule_FormControls.Remove(this);
					}
					this._pqModule.Entity = value;
					if ((value != null))
					{
						value.pqModule_FormControls.Add(this);
						this._ModuleID = value.ID;
					}
					else
					{
						this._ModuleID = default(Nullable<int>);
					}
					this.SendPropertyChanged("pqModule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pqNhomNhanVien")]
	public partial class pqNhomNhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _GroupID;
		
		private System.Nullable<int> _MaNV;
		
		private EntityRef<GroupID> _GroupID1;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    partial void OnMaNVChanging(System.Nullable<int> value);
    partial void OnMaNVChanged();
    #endregion
		
		public pqNhomNhanVien()
		{
			this._GroupID1 = default(EntityRef<GroupID>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._GroupID1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int")]
		public System.Nullable<int> MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupID_pqNhomNhanVien", Storage="_GroupID1", ThisKey="GroupID", OtherKey="ID", IsForeignKey=true)]
		public GroupID GroupID1
		{
			get
			{
				return this._GroupID1.Entity;
			}
			set
			{
				GroupID previousValue = this._GroupID1.Entity;
				if (((previousValue != value) 
							|| (this._GroupID1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GroupID1.Entity = null;
						previousValue.pqNhomNhanViens.Remove(this);
					}
					this._GroupID1.Entity = value;
					if ((value != null))
					{
						value.pqNhomNhanViens.Add(this);
						this._GroupID = value.ID;
					}
					else
					{
						this._GroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("GroupID1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_pqNhomNhanVien", Storage="_NhanVien", ThisKey="MaNV", OtherKey="ID", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.pqNhomNhanViens.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.pqNhomNhanViens.Add(this);
						this._MaNV = value.ID;
					}
					else
					{
						this._MaNV = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SinhVien")]
	public partial class SinhVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenSV;
		
		private string _MSV;
		
		private System.Nullable<bool> _GioiTinh;
		
		private System.Nullable<int> _IDKhoa;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _Anh;
		
		private string _DiaChi;
		
		private EntitySet<DiemDanh> _DiemDanhs;
		
		private EntitySet<SinhVien_LopMonHoc> _SinhVien_LopMonHocs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenSVChanging(string value);
    partial void OnTenSVChanged();
    partial void OnMSVChanging(string value);
    partial void OnMSVChanged();
    partial void OnGioiTinhChanging(System.Nullable<bool> value);
    partial void OnGioiTinhChanged();
    partial void OnIDKhoaChanging(System.Nullable<int> value);
    partial void OnIDKhoaChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnAnhChanging(string value);
    partial void OnAnhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    #endregion
		
		public SinhVien()
		{
			this._DiemDanhs = new EntitySet<DiemDanh>(new Action<DiemDanh>(this.attach_DiemDanhs), new Action<DiemDanh>(this.detach_DiemDanhs));
			this._SinhVien_LopMonHocs = new EntitySet<SinhVien_LopMonHoc>(new Action<SinhVien_LopMonHoc>(this.attach_SinhVien_LopMonHocs), new Action<SinhVien_LopMonHoc>(this.detach_SinhVien_LopMonHocs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSV", DbType="NVarChar(100)")]
		public string TenSV
		{
			get
			{
				return this._TenSV;
			}
			set
			{
				if ((this._TenSV != value))
				{
					this.OnTenSVChanging(value);
					this.SendPropertyChanging();
					this._TenSV = value;
					this.SendPropertyChanged("TenSV");
					this.OnTenSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSV", DbType="NVarChar(50)")]
		public string MSV
		{
			get
			{
				return this._MSV;
			}
			set
			{
				if ((this._MSV != value))
				{
					this.OnMSVChanging(value);
					this.SendPropertyChanging();
					this._MSV = value;
					this.SendPropertyChanged("MSV");
					this.OnMSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit")]
		public System.Nullable<bool> GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKhoa", DbType="Int")]
		public System.Nullable<int> IDKhoa
		{
			get
			{
				return this._IDKhoa;
			}
			set
			{
				if ((this._IDKhoa != value))
				{
					this.OnIDKhoaChanging(value);
					this.SendPropertyChanging();
					this._IDKhoa = value;
					this.SendPropertyChanged("IDKhoa");
					this.OnIDKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anh", DbType="NVarChar(1000)")]
		public string Anh
		{
			get
			{
				return this._Anh;
			}
			set
			{
				if ((this._Anh != value))
				{
					this.OnAnhChanging(value);
					this.SendPropertyChanging();
					this._Anh = value;
					this.SendPropertyChanged("Anh");
					this.OnAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(1000)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_DiemDanh", Storage="_DiemDanhs", ThisKey="ID", OtherKey="IDSinhVien")]
		public EntitySet<DiemDanh> DiemDanhs
		{
			get
			{
				return this._DiemDanhs;
			}
			set
			{
				this._DiemDanhs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_SinhVien_LopMonHoc", Storage="_SinhVien_LopMonHocs", ThisKey="ID", OtherKey="IDSinhVien")]
		public EntitySet<SinhVien_LopMonHoc> SinhVien_LopMonHocs
		{
			get
			{
				return this._SinhVien_LopMonHocs;
			}
			set
			{
				this._SinhVien_LopMonHocs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DiemDanhs(DiemDanh entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = this;
		}
		
		private void detach_DiemDanhs(DiemDanh entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = null;
		}
		
		private void attach_SinhVien_LopMonHocs(SinhVien_LopMonHoc entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = this;
		}
		
		private void detach_SinhVien_LopMonHocs(SinhVien_LopMonHoc entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SinhVien_LopMonHoc")]
	public partial class SinhVien_LopMonHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _IDSinhVien;
		
		private System.Nullable<int> _IDLopMonHoc;
		
		private EntityRef<LopMonHoc> _LopMonHoc;
		
		private EntityRef<SinhVien> _SinhVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDSinhVienChanging(System.Nullable<int> value);
    partial void OnIDSinhVienChanged();
    partial void OnIDLopMonHocChanging(System.Nullable<int> value);
    partial void OnIDLopMonHocChanged();
    #endregion
		
		public SinhVien_LopMonHoc()
		{
			this._LopMonHoc = default(EntityRef<LopMonHoc>);
			this._SinhVien = default(EntityRef<SinhVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSinhVien", DbType="Int")]
		public System.Nullable<int> IDSinhVien
		{
			get
			{
				return this._IDSinhVien;
			}
			set
			{
				if ((this._IDSinhVien != value))
				{
					if (this._SinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSinhVienChanging(value);
					this.SendPropertyChanging();
					this._IDSinhVien = value;
					this.SendPropertyChanged("IDSinhVien");
					this.OnIDSinhVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLopMonHoc", DbType="Int")]
		public System.Nullable<int> IDLopMonHoc
		{
			get
			{
				return this._IDLopMonHoc;
			}
			set
			{
				if ((this._IDLopMonHoc != value))
				{
					if (this._LopMonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLopMonHocChanging(value);
					this.SendPropertyChanging();
					this._IDLopMonHoc = value;
					this.SendPropertyChanged("IDLopMonHoc");
					this.OnIDLopMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopMonHoc_SinhVien_LopMonHoc", Storage="_LopMonHoc", ThisKey="IDLopMonHoc", OtherKey="ID", IsForeignKey=true)]
		public LopMonHoc LopMonHoc
		{
			get
			{
				return this._LopMonHoc.Entity;
			}
			set
			{
				LopMonHoc previousValue = this._LopMonHoc.Entity;
				if (((previousValue != value) 
							|| (this._LopMonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LopMonHoc.Entity = null;
						previousValue.SinhVien_LopMonHocs.Remove(this);
					}
					this._LopMonHoc.Entity = value;
					if ((value != null))
					{
						value.SinhVien_LopMonHocs.Add(this);
						this._IDLopMonHoc = value.ID;
					}
					else
					{
						this._IDLopMonHoc = default(Nullable<int>);
					}
					this.SendPropertyChanged("LopMonHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_SinhVien_LopMonHoc", Storage="_SinhVien", ThisKey="IDSinhVien", OtherKey="ID", IsForeignKey=true)]
		public SinhVien SinhVien
		{
			get
			{
				return this._SinhVien.Entity;
			}
			set
			{
				SinhVien previousValue = this._SinhVien.Entity;
				if (((previousValue != value) 
							|| (this._SinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinhVien.Entity = null;
						previousValue.SinhVien_LopMonHocs.Remove(this);
					}
					this._SinhVien.Entity = value;
					if ((value != null))
					{
						value.SinhVien_LopMonHocs.Add(this);
						this._IDSinhVien = value.ID;
					}
					else
					{
						this._IDSinhVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("SinhVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
